# Generated by Django 2.0.6 on 2019-07-04 14:26

import apps.userinfo.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生年月')),
                ('location', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='所在城市')),
                ('mobile', models.CharField(blank=True, default='', max_length=11, null=True, verbose_name='电话')),
                ('email', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='邮箱')),
                ('gender', models.SmallIntegerField(choices=[(0, ''), (1, '男♂'), (2, '女♀'), (3, '⚧')], default=0, verbose_name='性别')),
                ('blood', models.SmallIntegerField(choices=[(0, ''), (1, 'A'), (2, 'B'), (3, 'AB'), (4, 'O')], default=0, verbose_name='血型')),
                ('startWorkout', models.DateField(blank=True, null=True, verbose_name='开始健身日')),
                ('email_verify', models.IntegerField(choices=[(0, '未验证'), (1, '已验证')], default=0, verbose_name='Email是否已经验证')),
                ('mobile_verify', models.IntegerField(choices=[(0, '未验证'), (1, '已验证')], default=0, verbose_name='Mobile是否已经验证')),
                ('link', models.URLField(blank=True, help_text='提示：网址必须填写以http开头的完整形式', verbose_name='个人网址')),
                ('avatar', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=apps.userinfo.models.user_directory_path, verbose_name='头像')),
                ('session', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='用户登录时会写入当前session_key')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('is_following', models.IntegerField(choices=[(-1, 'None'), (0, 'False'), (1, 'True')], default=-1, verbose_name='是否Following')),
                ('is_block', models.IntegerField(choices=[(-1, 'None'), (0, 'False'), (1, 'True')], default=-1, verbose_name='是否Block')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='关注那个用户')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户的Following 和 Block 关系表',
                'verbose_name_plural': '用户的Following 和 Block 关系表',
            },
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('to', models.CharField(max_length=30, verbose_name='发送给谁')),
                ('code_type', models.IntegerField(choices=[(0, 'Email'), (1, 'Mobile')], default=0, verbose_name='验证码类型')),
                ('task_id', models.CharField(blank=True, max_length=37, null=True, verbose_name='任务的返回id')),
            ],
            options={
                'verbose_name': '邮箱和手机验证码',
                'verbose_name_plural': '邮箱和手机验证码',
            },
        ),
        migrations.AlterUniqueTogether(
            name='userfollowing',
            unique_together={('user', 'following')},
        ),
    ]
